@startuml
skinparam classAttributeIconSize 0

abstract class employee.Employee {
-firstName : String
-lastName : String
-gender : employee.Gender
-age : int
+work() : void
}

interface job.Job {
+work() : void
}

class employee.impl.Developer {
+work() : void
}

class job.impl.DeveloperJob {
-salary : int
+getSalary() : int
+setSalary(salary : int) : void
}

class employee.impl.Janitor {
+work() : void
}

class job.impl.JanitorJob {
-salary : int
+getSalary() : int
+setSalary(salary : int) : void
}

class employee.impl.Teacher {
+work() : void
}

class job.impl.TeacherJob {
-salary : int
+getSalary() : int
+setSalary(salary : int) : void
}

class employee.impl.Doctor {
+work() : void
}

class job.impl.DoctorJob {
-salary : int
+getSalary() : int
+setSalary(salary : int) : void
}

class employee.impl.Accountant {
+work() : void
}

class job.impl.AccountantJob {
-salary : int
+getSalary() : int
+setSalary(salary : int) : void
}

enum employee.Gender {
MALE
FEMALE
}

job.Job <--* employee.Employee : has a
employee.Gender <- employee.Employee : uses

employee.Employee <|--- employee.impl.Developer
employee.Employee <|--- employee.impl.Janitor
employee.Employee <|--- employee.impl.Teacher
employee.Employee <|--- employee.impl.Doctor
employee.Employee <|--- employee.impl.Accountant

job.Job <|--- job.impl.DeveloperJob
job.Job <|--- job.impl.JanitorJob
job.Job <|--- job.impl.TeacherJob
job.Job <|--- job.impl.DoctorJob
job.Job <|--- job.impl.AccountantJob
@enduml